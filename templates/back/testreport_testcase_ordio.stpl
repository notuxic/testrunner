<%
	let project_definition = project_definition.upgrade().unwrap();
	let options = options.upgrade().unwrap();
%>
<div class="long_report">
	<div class="title">
		<h2>
			<%- format!("#{:0>2}:&nbsp;<a id=\"tc-{}\"></a>{}", number, number, name) %>
			<a class="link-summary" href="#summary">(back to summary)</a>
		</h2>
	</div>
	<div class="description">
		<p>
			<%= description %>
		</p>
	</div>
	<div class="shortinfo">
		<table>
			<tr>
				<th>Type</th>
				<td>OrdIOTest</td>
			</tr>
			<tr>
				<th>Passed</th>
				<td>
					<%-
						if *passed {
							"<span class=\"success\">&#x2714;</span>"
						}
						else {
							"<span class=\"fail\">&#x2718;</span>"
						}
					%>
				</td>
			</tr>
			<tr>
				<th>Output-Diff</th>
				<td>
					<%=
						((diff_distance * 1000.0).floor() / 10.0).to_string()
					%>%
				</td>
			</tr>
			<% if add_distance.is_some() { %>
			<tr>
				<th>File-Diff</th>
				<td>
					<%=
						((add_distance.unwrap_or(0.0) * 1000.0).floor() / 10.0).to_string()
					%>%
				</td>
			</tr>
			<% } %>
			<tr>
				<th>Timeout</th>
				<td>
					<%= if *timeout { "yes" } else { "no" } %>
				</td>
			</tr>
			<tr>
				<th>Commandline</th>
				<td>
					<span class="inline-code"><%= command_used %></span>
				</td>
			</tr>
			<tr>
				<th>Exit Code</th>
				<td>
					expected: <span class="inline-code"><%= exp_ret.unwrap_or(-99) %></span>, got <span class="inline-code"><%= ret.unwrap_or(-99) %></span>
				</td>
			</tr>
			<% if project_definition.use_valgrind.unwrap_or(true) { %>
			<tr>
				<th>Memory Usage-Errors / Leaks</th>
				<td>
					<%= mem_errors.unwrap_or(-1) %> / <%= mem_leaks.unwrap_or(-1) %>
					<% if !(options.protected_mode && *protected) { %>
					(<a target="_blank" href="<%= mem_logfile %>">Open Log</a>)
					<% } %>
				</td>
			</tr>
			<% } %>
		</table>
	</div>

	<% if *truncated_output { %>
	<div class="failed">
		<span class="warning">Your output has been truncated, as it is a lot longer than the reference output!</span>
	</div>
	<% } %>

	<div class="diff">
		<table class="differences">
			<tr>
				<th>Reference Output</th>
				<th>Your Output</th>
			</tr>
			<tr>
				<% let (diff_left, diff_right) = iodiff_to_html(&io_diff, options.ws_hints); %>
				<td class="orig"><%- diff_left %></td>
				<td class="edit"><%- diff_right %></td>
			</tr>
		</table>
	</div>

	<% if add_diff.is_some() { %>
	<% if *add_file_missing { %>
	<div class="failed">
		<span class="warning">Your file could not be found!</span>
	</div>
	<% } %>
	<div class="diff">
		<table class="differences">
			<tr>
				<th>Reference File</th>
				<th>Your File</th>
			</tr>
			<tr>
				<%
					match add_diff.as_ref().unwrap() {
						Diff::PlainText(ref diff, _) => {
							let (diff_left, diff_right) = textdiff_to_html(&diff, options.ws_hints);
				%>
				<td class="orig"><%- diff_left %></td>
				<td class="edit"><%- diff_right %></td>
				<%
						},
							Diff::Binary(ref diff, _) => {
							let (diff_left, diff_right) = binarydiff_to_html(&diff);
				%>
				<td class="orig"><%- diff_left %></td>
				<td class="edit"><%- diff_right %></td>
				<%
						}
					}
				%>
			</tr>
		</table>
	</div>
	<% } %>
</div>

